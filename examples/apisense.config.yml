# This is the example configuration file for the ODH Data Monitor.

### LOGGING CONFIGURATION ###
log:
  # Set the log level. Valid values are: debug, info, warn, error, fatal, panic
  level: "info"

  # Set the log file. Leave empty to log to stdout.
  #file: "~/apisense/apisense.log"
  file: ""

### DAEMON CONFIGURATION ###
daemon:
  # Set the interval in seconds in which the daemon should run. The format is cron (https://www.wikipedia.org/wiki/Cron)
  interval: "* * * * *"

  # Sets whether the daemon should run a validation run upon startup
  run_on_startup: true

  # Definition files that start with this prefix are not included
  ignore_prefix: "_"

  # Set the discard times of reports. Reports older than this will be discarded.
  discard:
    # Enable discarding of reports
    enabled: true

    # Set the discard interval. Reports older than this will be discarded.
    max_lifetime: "720h"

  notification:
    # Set whether the daemon should send notifications.
    enabled: false

    # Set whether the daemon should send notifications only if the report contains errors.
    only_on_error: true

    # Set the email address to send notifications to.
    receiver: "me@example.com"

    # Set the SMTP server to use for sending notifications.
    smtp_server: "smtp.example.com"

    # Set the SMTP port to use for sending notifications.
    smtp_port: 587

### SSH CONFIGURATION ###
ssh:
  # Set the SSH host. Leave empty to allow any host to connect
  host: ""

  # Set the SSH port.
  port: 23232

### TUI CONFIGURATION ###
tui:
  refresh: 10

### API CONFIGURATION ###
api:
  # Set the API host. Leave empty to allow any host to connect
  host: ""

  # Set the API port.
  port: 8080

### EXTERNAL VALIDATORS ###
validation:
  # Define external validators that can be used in the definitions.
  external_validators:
    # Define a validator named "data-hole"
    - name: "data-hole"
      # Set the command to run. This can be a path to an executable or a command.
      path: "/home/aurelio/source/Repos/School/Matura/data_hole_validator/target/release/data_hole_validator"
      # Set the arguments to pass to the command.
      args:
        - "--max-records"
        - "50"
      # Set whether the command should be fatal or not.
      fatal: false

  # Define build-in validators that should be disabled.
  excluded_builtin_validators:
    - "range"