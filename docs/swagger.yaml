basePath: /api
definitions:
  controllers.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  controllers.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  controllers.LoginResponse:
    properties:
      token:
        type: string
    type: object
  definitions.Endpoint:
    properties:
      baseUrl:
        description: BaseUrl is the base path of the endpoint
        type: string
      enabled:
        description: IsEnabled is a boolean that indicates if the endpoint is enabled
          (not contained in the definition)
        type: boolean
      excludedValidators:
        description: ExcludedValidators is a list of validators that should not be
          used for this endpoint
        items:
          type: string
        type: array
      format:
        description: Format is the response format of the
        type: string
      name:
        description: Name is the name of the endpoint
        type: string
      queryParameters:
        description: QueryParameters are all the query parameters that should be added
          to the call
        items:
          $ref: '#/definitions/query.Definition'
        type: array
      responseSchema:
        description: ResponseSchema describes how the response should look like
        items:
          $ref: '#/definitions/definitions.SchemaEntry'
        type: array
      variables:
        description: Variables are all the variables that should be interpolated in
          the base url and the query parameters
        items:
          $ref: '#/definitions/definitions.Variable'
        type: array
    required:
    - baseUrl
    - format
    - name
    - responseSchema
    type: object
  definitions.SchemaEntry:
    properties:
      fields:
        description: Fields describe the children of this field if the field is an
          object or array
        items:
          $ref: '#/definitions/definitions.SchemaEntry'
        type: array
      max:
        description: Maximum is the maximum allowed value of the field
      min:
        description: Minimum is the minimum allowed value of the field
      name:
        description: Name is the name of the field
        type: string
      required:
        description: Required is true if the field is required (not null or not empty
          in case of an array)
        type: boolean
      type:
        description: Type is the type of the field
        type: string
    required:
    - fields
    - name
    - required
    - type
    type: object
  definitions.Variable:
    properties:
      constant:
        description: IsConstant is true if the value of the variable is constant or
          else false
        type: boolean
      name:
        description: Name is the name of the variable
        type: string
      values:
        description: Values are all the possible values of the variable (only 1 in
          case of a constant)
        items:
          type: string
        type: array
    required:
    - constant
    - name
    - values
    type: object
  pipeline.Report:
    properties:
      endpoints:
        description: Endpoints is a collection of ValidatedEndpoint holding the validation
          results
        items:
          $ref: '#/definitions/pipeline.ValidatedEndpoint'
        type: array
      id:
        description: Id is a unique identifier for each report
        type: string
      time:
        description: Time is the timestamp of the report
        type: string
    type: object
  pipeline.TestCaseResult:
    properties:
      url:
        description: Url is the url of the api call (with query parameters)
        type: string
      validatorResults:
        description: ValidatorResults is the collection of ValidatorResult that describe
          the result of each validator
        items:
          $ref: '#/definitions/pipeline.ValidatorResult'
        type: array
    type: object
  pipeline.ValidatedEndpoint:
    properties:
      endpointName:
        description: EndpointName is he name of the endpoint
        type: string
      testCaseResults:
        description: TestCaseResults are the collection of TestCaseResult that describe
          the result of validating a single api call
        items:
          $ref: '#/definitions/pipeline.TestCaseResult'
        type: array
    type: object
  pipeline.ValidatorResult:
    properties:
      message:
        description: Message is the error message of the validator
        type: string
      name:
        description: Name is the name of the validator
        type: string
      status:
        allOf:
        - $ref: '#/definitions/validators.ValidatorStatus'
        description: Status is the status of the validator (success/fail/skipped)
    type: object
  query.Definition:
    properties:
      name:
        description: Name is the name of the query parameter
        type: string
      value:
        description: Value is the value of the query parameter
        type: string
    required:
    - name
    - value
    type: object
  validators.ValidatorStatus:
    enum:
    - unknown
    - success
    - skipped
    - fail
    type: string
    x-enum-varnames:
    - ValidatorStatusUnknown
    - ValidatorStatusSuccess
    - ValidatorStatusSkipped
    - ValidatorStatusFail
host: localhost:8080
info:
  contact:
    name: buonotti
    url: https://github.com/buonotti/apisense/issues
  description: Api specification for the Apisense API
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Apisense API
  version: "1.0"
paths:
  /definitions:
    get:
      description: Gets a list of all definitions
      operationId: all-definitions
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/definitions.Endpoint'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all the definitions
      tags:
      - definitions
    post:
      consumes:
      - application/json
      description: Creates a new definition
      operationId: create-definition
      parameters:
      - description: Endpoint definition
        in: body
        name: definition
        required: true
        schema:
          $ref: '#/definitions/definitions.Endpoint'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/definitions.Endpoint'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Create a definition
      tags:
      - definitions
  /definitions/:name:
    get:
      description: Gets a single definition identified by his endpoint name
      operationId: definition
      parameters:
      - description: Bluetooth
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/definitions.Endpoint'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Get one definition
      tags:
      - definitions
  /health:
    get:
      description: Get the health status of the API
      operationId: health
      responses:
        "200":
          description: OK
      summary: Health check
      tags:
      - health
  /login:
    post:
      consumes:
      - application/json
      description: Logs a user in using the provided credentials
      operationId: login-user
      parameters:
      - description: content
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Logs a user in
      tags:
      - authentication
  /reports:
    get:
      description: Gets a list of all reports that can be filtered with a query
      operationId: all-reports
      parameters:
      - description: 'Query in the format: field.op.value (optional)'
        in: query
        name: where
        type: string
      - description: 'Return format: json or csv (default: json)'
        in: query
        name: format
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/pipeline.Report'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Get all the reports
      tags:
      - reports
  /reports/:id:
    get:
      description: Gets a single report identified by his id
      operationId: report
      parameters:
      - description: json
        in: query
        name: format
        type: string
      - description: qNg8rJX
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pipeline.Report'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Get one report
      tags:
      - reports
  /ws:
    get:
      description: Connect to this endpoint with the ws:// protocol to instantiate
        a websocket connection to get updates for new reports
      operationId: ws
      responses:
        "101":
          description: Switching Protocols
      summary: Open a websocket connection to receive notifications
      tags:
      - reports
swagger: "2.0"
